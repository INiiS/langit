diff --git a/dist/dev.cjs b/dist/dev.cjs
index 20798fd52703beff18fbe7ebbfab89bd29699557..d9e4f24c4861198384b04579a5ce365b5cbf58fe 100644
--- a/dist/dev.cjs
+++ b/dist/dev.cjs
@@ -1794,3 +1794,4 @@ exports.startTransition = startTransition;
 exports.untrack = untrack;
 exports.useContext = useContext;
 exports.useTransition = useTransition;
+exports.getSuspenseContext = getSuspenseContext;
diff --git a/dist/dev.js b/dist/dev.js
index c3b87ad373f745105a0bcfe641f409d8c4b2de3a..873ccb3ee098ef3ea94280da22f113a43d84020b 100644
--- a/dist/dev.js
+++ b/dist/dev.js
@@ -1738,4 +1738,4 @@ if (globalThis) {
   if (!globalThis.Solid$$) globalThis.Solid$$ = true;else console.warn("You appear to have multiple instances of Solid. This can lead to unexpected behavior.");
 }
 
-export { $DEVCOMP, $PROXY, $TRACK, DEV, ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, batch, cancelCallback, catchError, children, createComponent, createComputed, createContext, createDeferred, createEffect, createMemo, createReaction, createRenderEffect, createResource, createRoot, createSelector, createSignal, createUniqueId, enableExternalSource, enableHydration, enableScheduling, equalFn, from, getListener, getOwner, indexArray, lazy, mapArray, mergeProps, observable, on, onCleanup, onError, onMount, requestCallback, resetErrorBoundaries, runWithOwner, sharedConfig, splitProps, startTransition, untrack, useContext, useTransition };
+export { $DEVCOMP, $PROXY, $TRACK, DEV, ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, batch, cancelCallback, catchError, children, createComponent, createComputed, createContext, createDeferred, createEffect, createMemo, createReaction, createRenderEffect, createResource, createRoot, createSelector, createSignal, createUniqueId, enableExternalSource, enableHydration, enableScheduling, equalFn, from, getListener, getOwner, indexArray, lazy, mapArray, mergeProps, observable, on, onCleanup, onError, onMount, requestCallback, resetErrorBoundaries, runWithOwner, sharedConfig, splitProps, startTransition, untrack, useContext, useTransition, getSuspenseContext };
diff --git a/dist/server.cjs b/dist/server.cjs
index e0988e36528aa872e7b095ffd88640f67cabf479..1f95ea1d28d5b4595e07bca4b501d0c27a9a1ade 100644
--- a/dist/server.cjs
+++ b/dist/server.cjs
@@ -731,3 +731,4 @@ exports.startTransition = startTransition;
 exports.untrack = untrack;
 exports.useContext = useContext;
 exports.useTransition = useTransition;
+exports.getSuspenseContext = () => SuspenseContext;
diff --git a/dist/server.js b/dist/server.js
index a452b37514454312d47c44830d8e1d75abefcdd7..17ef37457253843706473970df4911181565d20b 100644
--- a/dist/server.js
+++ b/dist/server.js
@@ -676,4 +676,8 @@ function Suspense(props) {
   }, suspenseError);
 }
 
-export { $DEVCOMP, $PROXY, $TRACK, DEV, ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, batch, catchError, children, createComponent, createComputed, createContext, createDeferred, createEffect, createMemo, createReaction, createRenderEffect, createResource, createRoot, createSelector, createSignal, createUniqueId, enableExternalSource, enableHydration, enableScheduling, equalFn, from, getListener, getOwner, indexArray, lazy, mapArray, mergeProps, observable, on, onCleanup, onError, onMount, requestCallback, resetErrorBoundaries, runWithOwner, sharedConfig, splitProps, startTransition, untrack, useContext, useTransition };
+function getSuspenseContext () {
+  return SuspenseContext;
+}
+
+export { $DEVCOMP, $PROXY, $TRACK, DEV, ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, batch, catchError, children, createComponent, createComputed, createContext, createDeferred, createEffect, createMemo, createReaction, createRenderEffect, createResource, createRoot, createSelector, createSignal, createUniqueId, enableExternalSource, enableHydration, enableScheduling, equalFn, from, getListener, getOwner, indexArray, lazy, mapArray, mergeProps, observable, on, onCleanup, onError, onMount, requestCallback, resetErrorBoundaries, runWithOwner, sharedConfig, splitProps, startTransition, untrack, useContext, useTransition, getSuspenseContext };
diff --git a/dist/solid.cjs b/dist/solid.cjs
index a644665ab23d136e78a21252798aebdfd4c3cc49..086864c99843c7353fc3843c63d870ce14bba9fd 100644
--- a/dist/solid.cjs
+++ b/dist/solid.cjs
@@ -1725,3 +1725,4 @@ exports.startTransition = startTransition;
 exports.untrack = untrack;
 exports.useContext = useContext;
 exports.useTransition = useTransition;
+exports.getSuspenseContext = getSuspenseContext;
diff --git a/dist/solid.js b/dist/solid.js
index b8089983303e1a86e8b6bed025e0bb03d60d8003..988e7caa1aa87012182fbecc568bcc872948bc24 100644
--- a/dist/solid.js
+++ b/dist/solid.js
@@ -1669,4 +1669,4 @@ function Suspense(props) {
 
 const DEV = undefined;
 
-export { $DEVCOMP, $PROXY, $TRACK, DEV, ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, batch, cancelCallback, catchError, children, createComponent, createComputed, createContext, createDeferred, createEffect, createMemo, createReaction, createRenderEffect, createResource, createRoot, createSelector, createSignal, createUniqueId, enableExternalSource, enableHydration, enableScheduling, equalFn, from, getListener, getOwner, indexArray, lazy, mapArray, mergeProps, observable, on, onCleanup, onError, onMount, requestCallback, resetErrorBoundaries, runWithOwner, sharedConfig, splitProps, startTransition, untrack, useContext, useTransition };
+export { $DEVCOMP, $PROXY, $TRACK, DEV, ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, batch, cancelCallback, catchError, children, createComponent, createComputed, createContext, createDeferred, createEffect, createMemo, createReaction, createRenderEffect, createResource, createRoot, createSelector, createSignal, createUniqueId, enableExternalSource, enableHydration, enableScheduling, equalFn, from, getListener, getOwner, indexArray, lazy, mapArray, mergeProps, observable, on, onCleanup, onError, onMount, requestCallback, resetErrorBoundaries, runWithOwner, sharedConfig, splitProps, startTransition, untrack, useContext, useTransition, getSuspenseContext };
diff --git a/types/index.d.ts b/types/index.d.ts
index ebd2464b715594ad5779f636d2287a743f2eb0f0..99f023380b600eea127719b1867008f9aca60304 100644
--- a/types/index.d.ts
+++ b/types/index.d.ts
@@ -1,4 +1,4 @@
-export { $DEVCOMP, $PROXY, $TRACK, batch, catchError, children, createComputed, createContext, createDeferred, createEffect, createMemo, createReaction, createRenderEffect, createResource, createRoot, createSelector, createSignal, enableExternalSource, enableScheduling, equalFn, getListener, getOwner, on, onCleanup, onError, onMount, runWithOwner, startTransition, untrack, useContext, useTransition } from "./reactive/signal.js";
+export { $DEVCOMP, $PROXY, $TRACK, batch, catchError, children, createComputed, createContext, createDeferred, createEffect, createMemo, createReaction, createRenderEffect, createResource, createRoot, createSelector, createSignal, enableExternalSource, enableScheduling, equalFn, getListener, getOwner, on, onCleanup, onError, onMount, runWithOwner, startTransition, untrack, useContext, useTransition, getSuspenseContext } from "./reactive/signal.js";
 export type { Accessor, AccessorArray, ChildrenReturn, Context, ContextProviderComponent, EffectFunction, EffectOptions, InitializedResource, InitializedResourceOptions, InitializedResourceReturn, MemoOptions, NoInfer, OnEffectFunction, OnOptions, Owner, ResolvedChildren, ResolvedJSXElement, Resource, ResourceActions, ResourceFetcher, ResourceFetcherInfo, ResourceOptions, ResourceReturn, ResourceSource, ReturnTypes, Setter, Signal, SignalOptions } from "./reactive/signal.js";
 export * from "./reactive/observable.js";
 export * from "./reactive/scheduler.js";
